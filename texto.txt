Texto agregado

mas texto agregado

texto en la tercera rama

prueba de mas commits

firebase.auth().onAuthStateChanged(function(user) {
    if (user) {
      // User is signed in.
  
      document.getElementById("user_div").style.display = "block";
      document.getElementById("login_div").style.display = "none";
  
      var user = firebase.auth().currentUser;
  
      if(user != null){
  
        var email_id = user.email;
      }
  
    } else {
      // No user is signed in.
      document.getElementById("user_div").style.display = "none";
      document.getElementById("login_div").style.display = "block";
  
    }
  });
  
  function login(){
  
    var userEmail = document.getElementById("email_field").value;
    var userPass = document.getElementById("password_field").value;
  
    firebase.auth().signInWithEmailAndPassword(userEmail, userPass).catch(function(error) {
      // Handle Errors here.
      var errorCode = error.code;
      var errorMessage = error.message;
  
      window.alert("Error : " + errorMessage);
  
      // ...
    });
  }
  
  // SignUp
  const signUpForm = document.querySelector("#signup-form");
  signUpForm.addEventListener("submit", (e) => {
    e.preventDefault();
    const email = signUpForm["signup-email"].value;
    const password = signUpForm["signup-password"].value;
  
    // Authenticate the User
    auth
      .createUserWithEmailAndPassword(email, password)
      .then((userCredential) => {
        // clear the form
        signUpForm.reset();
      });
  });
  
  
  function logout(){
    firebase.auth().signOut();
  }
  
  const db = firebase.firestore();
  
  const taskForm = document.getElementById("task-form");
  const tasksContainer = document.getElementById("tasksssssssssss-container");
  
  let editStatus = false;
  let id = '';
  
  const saveTask = (title, description) =>
    db.collection("posts").doc().set({
      title,
      description,
    });
  
  const getTasks = () => db.collection("posts").get();
  const onGetTasks = (callback) => db.collection("posts").onSnapshot(callback);
  const deleteTask = (id) => db.collection("posts").doc(id).delete();
  const getTask = (id) => db.collection("posts").doc(id).get();
  const updateTask = (id, updatedTask) => db.collection('posts').doc(id).update(updatedTask);
  

  
  taskForm.addEventListener("submit", async (e) => {
    e.preventDefault();
  
    const title = taskForm["task-title"];
    const description = taskForm["task-description"];
  
    try {
      if (!editStatus) {
        await saveTask(title.value, description.value);
      } else {
        await updateTask(id, {
          title: title.value,
          description: description.value,
        })
  
        editStatus = false;
        id = '';
        taskForm['btn-task-form'].innerText = 'Guardar';
      }
  
      taskForm.reset();
      title.focus();
    } catch (error) {
      console.log(error);
    }
  });